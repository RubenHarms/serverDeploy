#!/bin/bash

pushd `dirname $0` > /dev/null
CURRENT_PATH=`pwd -P`
popd > /dev/null

. ${CURRENT_PATH}/../include/main

NAMES=()
USERS=()
REPOSITORIES=()
FOLDERS=()

function addSoftware () {
    NAMES+=("$1")
    USERS+=("$2")
    REPOSITORIES+=("$3")
    FOLDERS+=("$4")
}

function installComposer(){
    php -r "readfile('https://getcomposer.org/installer');" > composer-setup.php
    php composer-setup.php --install-dir=/usr/bin/
    mv /usr/bin/composer.phar /usr/bin/composer
    php -r "unlink('composer-setup.php');"
}

function createGitKey(){
    ssh-keygen -t rsa -C "postbus@rubenharms.nl"
    cat ~/.ssh/id_rsa.pub
    echo "Add the key above to de chain of the repository and press [ENTER] to continue: "
    read continue;
}

requireRoot

addSoftware 'MajesticSender' 'majesticsender' 'git@git.e-vence.nl:rsa/MajesticSender.git' 'majesticsender'
addSoftware 'RSA Leads' 'rsaleads' 'git@git.e-vence.nl:rsa/RsaLeads.git' 'rsaleads'

echo "The following software is available: ";
showChoices "NAMES"

askQuestion choices "Which software do you want to install?" 0 "${USERS[@]}"


dir=${FOLDERS[$lastInput]}
user=${USERS[$lastInput]}
repository=${REPOSITORIES[$lastInput]}


sudo mkdir /var/www/domains/${dir} --parents;

if ! [[ -f "/usr/bin/composer" ]]; then
    askQuestion boolean "Do you want to install composer? (y/n) " "y"
    callOnYes "installComposer"
fi

askQuestion boolean "Do you create a new SSH key for the git server? (y/n) " "y"
callOnYes "createGitKey"

git clone ${repository} /var/www/domains/${dir}
groupadd $user
useradd $user -g $user -d /var/www/domains/${dir};
chown ${user}.${user} /var/www/domains/${dir}  -R

if [ OS = "Ubuntu" ]; then
    sudo apt-get install nodejs npm
elif [ OS = "RedHat" ]; then
    yum -y install nodejs npm
fi

npm install -g uglify-js
npm install -g uglifycss

cd /var/www/domains/${dir}/

if [ -f "/var/www/domains/${dir}/app/config/parameters.yml.prod"  ]; then
    cp app/config/parameters.yml.prod app/config/parameters.yml
fi

if [ -d "/var/www/domains/${dir}/etc/nginx/conf.d/" ]; then
    cp /var/www/domains/${dir}/etc/nginx/conf.d/* /etc/nginx/conf.d/
fi

if [ -d "/etc/nginx/ssl" ]; then
    mkdir /etc/nginx/ssl;
fi

if [ -d "/var/www/domains/${dir}/etc/nginx/ssl/" ]; then
    cp /var/www/domains/${dir}/etc/nginx/ssl/* /etc/nginx/ssl/
fi

composer update